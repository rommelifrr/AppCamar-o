# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nycpBurC_kqtbOeOl4at6LMvBS8o7Ir3
"""

pip install streamlit pandas openpyxl matplotlib

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from io import BytesIO

st.title("Controle de Custos - Viveiro de Camarão")

# Upload do arquivo Excel
uploaded_file = st.file_uploader("Carregar planilha de custos", type=["xlsx", "xls"])

if uploaded_file is not None:
    try:
        # Lendo o arquivo Excel
        df = pd.read_excel(uploaded_file)
        st.write("Dados importados:")
        st.dataframe(df)

        # Exemplo: resumo dos custos por categoria (ajuste conforme a estrutura da sua planilha)
        if 'Categoria' in df.columns and 'Valor' in df.columns:
            resumo = df.groupby('Categoria')['Valor'].sum().reset_index()
            st.subheader("Resumo de Custos por Categoria")
            st.dataframe(resumo)

            # Gráfico de barras
            fig, ax = plt.subplots()
            ax.bar(resumo['Categoria'], resumo['Valor'])
            ax.set_xlabel("Categoria")
            ax.set_ylabel("Valor")
            ax.set_title("Custo por Categoria")
            st.pyplot(fig)
        else:
            st.warning("As colunas 'Categoria' e 'Valor' não foram encontradas. Verifique a estrutura do arquivo.")

        # Seção para adicionar novos registros
        st.subheader("Adicionar novo registro")
        novo_data = st.date_input("Data do Registro")
        nova_descricao = st.text_input("Descrição")
        nova_categoria = st.text_input("Categoria")
        novo_valor = st.number_input("Valor", min_value=0.0, format="%.2f")

        if st.button("Adicionar Registro"):
            novo_registro = pd.DataFrame({
                'Data': [novo_data],
                'Descrição': [nova_descricao],
                'Categoria': [nova_categoria],
                'Valor': [novo_valor]
            })
            # Integra o novo registro à base atual
            df = pd.concat([df, novo_registro], ignore_index=True)
            st.success("Registro adicionado com sucesso!")
            st.dataframe(df)
            # Aqui você pode incluir uma rotina para salvar a base atualizada em arquivo ou banco de dados

    except Exception as e:
        st.error(f"Ocorreu um erro ao processar o arquivo: {e}")
else:
    st.info("Por favor, faça o upload do arquivo para iniciar.")